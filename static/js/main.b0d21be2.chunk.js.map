{"version":3,"sources":["constants.js","reducers/stepReducer.js","contexts/stepContext.js","hooks/useStep.js","components/commons/Steps/Steps.js","components/commons/LicenseDetails/LicenseDetails.js","components/commons/PropertiesList/PropertiesList.js","components/commons/AttributesList/AttributesList.js","components/commons/StepsProgress/StepsProgress.js","components/commons/DonatePopover/DonatePopover.js","components/commons/Header/Header.js","components/commons/Footer/Footer.js","components/views/App/App.js","serviceWorker.js","index.js"],"names":["STEPS","Steps","LICENSES","Licenses","stepActions","stepReducer","state","action","type","currentStep","payload","appropriateLicense","isLoading","StepContext","createContext","StepContextProvider","children","initialState","useReducer","steps","dispatch","Provider","value","useStep","useContext","scrollToRef","ref","current","firstChild","scrollLeft","number","changeStep","currentStepAnswer","nextAction","nextStep","onYesAction","onNoAction","end","filter","license","slug","step","setTimeout","resetState","backToLastStep","stepsProgressRef","useRef","useEffect","justify","xs","span","sm","md","lg","xl","spinning","key","className","Text","questionBody","size","onClick","LicenseDetails","licenseInfo","title","name","status","icon","Animate","transitionName","transitionAppear","logo","src","process","alt","width","height","ExclamationOutlined","style","fontSize","color","subTitle","offset","description","read_more_link","href","target","extra","animationType","header","items","permissions","CheckCircleOutlined","limitations","CloseCircleOutlined","conditions","InfoCircleOutlined","attributes","PropertiesList","Title","level","itemLayout","locale","emptyText","split","dataSource","renderItem","item","Item","tip","AttributesList","_value","StepsProgress","labelPlacement","progressDot","map","Step","DonatePopover","strong","copyable","text","substr","MailOutlined","TwitterOutlined","GithubOutlined","Header","align","display","ReloadOutlined","Footer","disabled","trigger","content","placement","App","Content","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b0d21be2.chunk.js","sourcesContent":["import Steps from './steps'\nimport Licenses from './licenses'\n\nexport const STEPS = Steps\nexport const LICENSES = Licenses\nexport const APP_LOGO = 'logo.svg'\nexport const BTC_WALLET_ADDRESS = '3PHtQj4QJGPf3fKSzxfThcuUKqf9DaWWoz'\nexport const ETH_WALLET_ADDRESS = '0xEd52935dEb1e9e316DC7df06D4705Bc86186ac2C'\n","export const stepActions = {\n    UPDATE_CURRENT_STEP: 'UPDATE_CURRENT_STEP',\n    SET_APPROPRIATE_LICENSE: 'SET_APPROPRIATE_LICENSE',\n    RESET_STATE: 'RESET_STATE',\n    IS_LOADING: 'IS_LOADING'\n}\n\nexport const stepReducer = (state, action) => {\n    switch (action.type) {\n        case stepActions.UPDATE_CURRENT_STEP:\n            return {\n                ...state,\n                currentStep: action.payload,\n                appropriateLicense: null\n            }\n        case stepActions.SET_APPROPRIATE_LICENSE:\n            return {...state, appropriateLicense: action.payload}\n        case stepActions.RESET_STATE:\n            return {...state, currentStep: action.payload, appropriateLicense: null}\n        case stepActions.IS_LOADING:\n            return {...state, isLoading: action.payload}\n        default:\n            return state\n    }\n}\n","import React, { createContext, useReducer } from 'react'\nimport { STEPS } from '../constants'\nimport { stepReducer } from '../reducers'\n\nexport const StepContext = createContext(null)\nexport const StepContextProvider = ({children}) => {\n    const initialState = {\n        isLoading: false,\n        currentStep: STEPS[0],\n        appropriateLicense: null\n    }\n    const [steps, dispatch] = useReducer(stepReducer, initialState)\n\n    return (\n        <StepContext.Provider value={{steps, dispatch}}>\n            {children}\n        </StepContext.Provider>\n    )\n}\n","import { useContext } from 'react'\nimport { LICENSES, STEPS } from '../constants'\nimport { StepContext } from '../contexts'\nimport { stepActions } from '../reducers'\n\nexport const useStep = () => {\n    const {steps, dispatch} = useContext(StepContext)\n\n    const changeStep = (currentStepAnswer, ref) => {\n        dispatch({\n            type: stepActions.IS_LOADING,\n            payload: true\n        })\n\n        let nextAction = {}\n        let nextStep = {}\n\n        if (currentStepAnswer) {\n            nextAction = steps.currentStep.onYesAction\n        } else {\n            nextAction = steps.currentStep.onNoAction\n        }\n\n        if (nextAction.end === true) {\n            dispatch({\n                type: stepActions.SET_APPROPRIATE_LICENSE,\n                payload: LICENSES.filter(license => license.slug === nextAction.appropriateLicense)[0]\n            })\n        } else {\n            nextStep = STEPS.filter(step => step.number === nextAction.nextStep)[0]\n\n            dispatch({\n                type: stepActions.UPDATE_CURRENT_STEP,\n                payload: nextStep\n            })\n        }\n\n        scrollToRef(ref, nextStep)\n\n        setTimeout(() => dispatch({\n                type: stepActions.IS_LOADING,\n                payload: false\n            }), 300\n        )\n    }\n\n    const scrollToRef = (ref, currentStep) => {\n        ref.current.firstChild.scrollLeft = (currentStep.number - 1) * 144\n    }\n\n    const resetState = () => {\n        dispatch({\n            type: stepActions.IS_LOADING,\n            payload: true\n        })\n        dispatch({\n            type: stepActions.RESET_STATE,\n            payload: STEPS[0]\n        })\n        setTimeout(() => dispatch({\n                type: stepActions.IS_LOADING,\n                payload: false\n            }), 300\n        )\n    }\n\n    const backToLastStep = () => {\n        dispatch({\n            type: stepActions.IS_LOADING,\n            payload: true\n        })\n        dispatch({\n            type: stepActions.UPDATE_CURRENT_STEP,\n            payload: steps.currentStep\n        })\n        setTimeout(() => dispatch({\n                type: stepActions.IS_LOADING,\n                payload: false\n            }), 300\n        )\n    }\n\n    return {steps, changeStep, scrollToRef, resetState, backToLastStep}\n}\n","import { Button, Col, Row, Spin, Typography } from 'antd'\nimport QueueAnim from 'rc-queue-anim'\nimport React, { Fragment, useEffect, useRef } from 'react'\nimport { StepsProgress } from '..'\nimport { useStep } from '../../../hooks'\nimport './Steps.scss'\n\nexport const Steps = () => {\n    const stepsProgressRef = useRef(null)\n    const {steps, changeStep, scrollToRef} = useStep()\n\n    useEffect(() => scrollToRef(stepsProgressRef, steps.currentStep),\n        [steps])\n\n    return (\n        <Fragment>\n            <Row justify='center'>\n                <Col xs={{span: 18}} sm={{span: 18}} md={{span: 14}}\n                     lg={{span: 12}} xl={{span: 12}}>\n                    <div ref={stepsProgressRef}>\n                        <StepsProgress/>\n                    </div>\n                </Col>\n            </Row>\n            <Row justify='center'>\n                <Col xs={{span: 24}} sm={{span: 20}} md={{span: 14}}\n                     lg={{span: 12}} xl={{span: 10}}>\n                    <Spin spinning={steps.isLoading}>\n                        <QueueAnim type={['left']}>\n                            {!steps.isLoading ?\n                                <div key='a'\n                                     className='align-center question-body'>\n                                    <Typography.Text>\n                                        {steps.currentStep.questionBody}\n                                    </Typography.Text>\n                                </div> : null}\n                        </QueueAnim>\n                    </Spin>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24}>\n                    <QueueAnim type={['right']}>\n                        {!steps.isLoading ?\n                            <div key='a' className='align-center'>\n                                <Button type='primary'\n                                        size='large'\n                                        className='answer-button'\n                                        onClick={() => {\n                                            changeStep(true, stepsProgressRef)\n                                        }}\n                                >\n                                    Yes\n                                </Button>\n                                <Button size='large'\n                                        className='answer-button'\n                                        onClick={() => {\n                                            changeStep(false, stepsProgressRef)\n                                        }}\n                                >\n                                    No\n                                </Button>\n                            </div> : null}\n                    </QueueAnim>\n                </Col>\n            </Row>\n        </Fragment>\n    )\n}\n","import {\n    CheckCircleOutlined,\n    CloseCircleOutlined,\n    ExclamationOutlined,\n    InfoCircleOutlined\n} from '@ant-design/icons'\nimport { Button, Col, Result, Row, Spin, Typography } from 'antd'\nimport Animate from 'rc-animate'\nimport React from 'react'\nimport { AttributesList, PropertiesList } from '..'\nimport { useStep } from '../../../hooks'\nimport './LicenseDetails.scss'\n\nexport const LicenseDetails = () => {\n    const {steps, resetState, backToLastStep} = useStep()\n    const licenseInfo = steps.appropriateLicense\n\n    return (\n        <Result\n            className='license-details-layout'\n            title={licenseInfo.name}\n            status='info'\n            icon={\n                <Animate transitionName='fade' transitionAppear>\n                    {licenseInfo.logo ? <img key='1'\n                                             src={process.env.PUBLIC_URL + `/static/media/logos/${licenseInfo.logo}`}\n                                             title={licenseInfo.name}\n                                             alt={licenseInfo.name}\n                                             width='80px'\n                                             height='100%'\n                        /> :\n                        <ExclamationOutlined key='2'\n                                             style={{\n                                                 fontSize: 52,\n                                                 color: '#faad14'\n                                             }}/>}\n                </Animate>\n            }\n            subTitle={\n                <Spin spinning={steps.isLoading}>\n                    <Animate transitionName='fade' transitionAppear>\n                        <Row key='3'>\n                            <Col xs={{span: 24}}\n                                 md={{span: 16, offset: 4}}\n                                 lg={{span: 18, offset: 3}}\n                                 xl={{span: 18, offset: 3}}\n                            >\n                                <Typography.Text>{licenseInfo.description}\n                                    {\n                                        licenseInfo.read_more_link ? <Button\n                                            type='link'\n                                            size='small'\n                                            href={licenseInfo.read_more_link}\n                                            target='_blank'>\n                                            Read more...\n                                        </Button> : null\n                                    }\n                                </Typography.Text>\n                            </Col>\n                        </Row>\n                    </Animate>\n                </Spin>\n            }\n            extra={[\n                <Button key='4' onClick={backToLastStep}\n                        type='primary'>\n                    Go Back\n                </Button>,\n                <Button key='5' onClick={resetState}>\n                    Reset\n                </Button>\n            ]}\n        >\n            <Row>\n\n                <Col xs={{span: 24}}\n                     md={{span: 12}}\n                     lg={{span: 6}}\n                     xl={{span: 6}}\n                >\n                    <PropertiesList key='a'\n                                    animationType={['left']}\n                                    header='Permissions'\n                                    items={licenseInfo.permissions}\n                                    icon={<CheckCircleOutlined\n                                        className='item-icon'\n                                        style={{color: '#52c41a'}}\n                                    />}\n                    />\n                </Col>\n                <Col xs={{span: 24}}\n                     md={{span: 12}}\n                     lg={{span: 6}}\n                     xl={{span: 6}}\n                >\n                    <PropertiesList key='b'\n                                    header='Limitations'\n                                    animationType={['left']}\n                                    items={licenseInfo.limitations}\n                                    icon={<CloseCircleOutlined\n                                        className='item-icon'\n                                        style={{color: '#f5222d'}}\n                                    />}\n                    />\n                </Col>\n                <Col xs={{span: 24}}\n                     md={{span: 12}}\n                     lg={{span: 6}}\n                     xl={{span: 6}}\n                >\n                    <PropertiesList key='c'\n                                    header='Conditions'\n                                    animationType={['right']}\n                                    items={licenseInfo.conditions}\n                                    icon={<InfoCircleOutlined\n                                        className='item-icon'\n                                        style={{color: '#1890ff'}}\n                                    />}\n                    />\n                </Col>\n                <Col xs={{span: 24}}\n                     md={{span: 12}}\n                     lg={{span: 6}}\n                     xl={{span: 6}}\n                >\n                    <AttributesList header='Properties'\n                                    animationType={['right']}\n                                    items={licenseInfo.attributes}\n                    />\n                </Col>\n            </Row>\n        </Result>\n    )\n}\n","import { List, Tooltip, Typography } from 'antd'\nimport QueueAnim from 'rc-queue-anim'\nimport React from 'react'\n\nexport const PropertiesList = ({header, items, icon, animationType}) => (\n    <QueueAnim type={animationType}>\n        <List\n            header={<Typography.Title level={4}>{header}</Typography.Title>}\n            itemLayout='horizontal'\n            locale={{emptyText: 'No item!'}}\n            split={false}\n            key='a'\n            dataSource={items}\n            renderItem={item => (\n                <List.Item>\n                    {icon}\n                    <Tooltip title={item.tip}>\n                        <Typography.Text>{item.name}</Typography.Text>\n                    </Tooltip>\n                </List.Item>\n            )}\n        />\n    </QueueAnim>\n)\n","import { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons'\nimport { List, Typography } from 'antd'\nimport QueueAnim from 'rc-queue-anim'\nimport React from 'react'\nimport './AttributesList.scss'\n\nexport const AttributesList = ({header, items, animationType}) => (\n    <QueueAnim type={animationType}>\n        <List header={<Typography.Title level={4}>{header}</Typography.Title>}\n              itemLayout='horizontal'\n              split={false}\n              key='a'\n              locale={{emptyText: 'No item!'}}\n              dataSource={items}\n              renderItem={item => (\n                  <List.Item>\n                      {item._value ?\n                          <CheckCircleOutlined className='item-icon'\n                                               style={{color: '#52c41a'}}\n                          /> :\n                          <CloseCircleOutlined className='item-icon'\n                                               style={{color: '#f5222d'}}\n                          />}\n                      {item.name}\n                  </List.Item>\n              )}\n        />\n    </QueueAnim>\n)\n","import { Steps } from 'antd'\nimport React from 'react'\nimport { STEPS } from '../../../constants'\nimport { useStep } from '../../../hooks'\nimport './StepsProgress.scss'\n\nexport const StepsProgress = () => {\n    const {steps} = useStep()\n\n    return (\n        <Steps\n            current={steps.currentStep.number - 1}\n            labelPlacement='vertical'\n            size='small'\n            key='1'\n            progressDot={true}\n            className='steps-progress'\n        >\n            {STEPS.map(item => (\n                <Steps.Step key={item.name} title={item.name}/>\n            ))}\n        </Steps>\n    )\n}\n","import {\n    GithubOutlined,\n    MailOutlined,\n    TwitterOutlined\n} from '@ant-design/icons'\nimport { Button, Col, Divider, Row, Typography } from 'antd'\nimport React, { Fragment } from 'react'\nimport { BTC_WALLET_ADDRESS, ETH_WALLET_ADDRESS } from '../../../constants'\nimport './DonatePopover.scss'\n\nexport const DonatePopover = () => (\n    <Fragment>\n        <Row style={{width: '250px'}}>\n            <Col span={11} className='align-center'>\n                <Typography.Text strong>Bitcoin</Typography.Text>\n                <img\n                    src={process.env.PUBLIC_URL + `/static/media/btc-qr.svg`}\n                    width='90'\n                    height='90'\n                    title='Bitcoin Wallet' alt='Bitcoin Wallet'/>\n                <Typography.Text\n                    copyable={{text: BTC_WALLET_ADDRESS}}\n                    className='donate-address'\n                    type='secondary'\n                >\n                    {BTC_WALLET_ADDRESS.substr(0, 5)}...\n                </Typography.Text>\n            </Col>\n            <Divider type='vertical' className='donate-divider-v'/>\n            <Col span={11} className='align-center'>\n                <Typography.Text strong>Ethereum</Typography.Text>\n                <img\n                    src={process.env.PUBLIC_URL + `/static/media/eth-qr.svg`}\n                    width='90'\n                    height='90'\n                    title='Ethereum Wallet' alt='Ethereum Wallet'/>\n                <Typography.Text\n                    copyable={{text: ETH_WALLET_ADDRESS}}\n                    className='donate-address'\n                    type='secondary'\n                >\n                    {ETH_WALLET_ADDRESS.substr(0, 5)}...\n                </Typography.Text>\n            </Col>\n        </Row>\n        <Divider className='donate-divider-h'>OR</Divider>\n        <div className='align-center'>\n            <Typography.Text className='donate-message'>\n                Just an encouraging message :)\n            </Typography.Text>\n            <div>\n                <Button type='link'\n                        href='mailto:mrouhi13@gmail.com'\n                        target='_blank'\n                >\n                    <MailOutlined/>\n                </Button>\n                <Button type='link'\n                        href='https://twitter.com/mrouhi13'\n                        target='_blank'\n                >\n                    <TwitterOutlined/>\n                </Button>\n                <Button type='link'\n                        href='https://github.com/mrouhi13'\n                        target='_blank'\n                >\n                    <GithubOutlined/>\n                </Button>\n            </div>\n        </div>\n    </Fragment>\n)\n","import { ReloadOutlined } from '@ant-design/icons'\nimport { Button, Col, Layout, Row, Typography } from 'antd'\nimport React from 'react'\nimport { APP_LOGO } from '../../../constants'\nimport { useStep } from '../../../hooks'\nimport './Header.scss'\n\nexport const Header = () => {\n    const {resetState} = useStep()\n\n    return (\n        <Layout.Header className='layout-header'>\n            <Row align='middle'>\n                <Col xs={{span: 15}}\n                     md={{span: 12}}\n                     lg={{span: 8}}\n                     xl={{span: 16}}\n                >\n                    <div className='app-logo'>\n                        <img\n                            src={process.env.PUBLIC_URL + `/static/media/${APP_LOGO}`}\n                            width='36'\n                            height='36'\n                            title='FlyYouFools'\n                            alt='FlyYouFools'\n                        />\n                        <Typography.Title level={1}\n                                          style={{\n                                              fontSize: 18,\n                                              display: 'inline-flex'\n                                          }}>\n                            FlyYouFools\n                        </Typography.Title>\n                    </div>\n                </Col>\n                <Col xs={{span: 9}}\n                     md={{span: 12}}\n                     lg={{span: 16}}\n                     xl={{span: 8}}\n                >\n                    <Button onClick={resetState}\n                            className='reset-button'\n                            icon={<ReloadOutlined/>}\n                            size='small'\n                            type='link'\n                    >\n                        Reset\n                    </Button>\n                </Col>\n            </Row>\n        </Layout.Header>\n    )\n}\n","import { Button, Col, Divider, Layout, Popover, Row, Typography } from 'antd'\nimport React from 'react'\nimport { DonatePopover } from '..'\nimport './Footer.scss'\n\nexport const Footer = () => (\n    <Layout.Footer className='layout-footer'>\n        <Row align='middle'>\n            <Col xs={{span: 15}}\n                 md={{span: 12}}\n                 lg={{span: 8}}\n                 xl={{span: 16}}\n            >\n                <Typography.Text disabled>by </Typography.Text>\n                <Typography.Text className='copyright'\n                                 type='secondary'\n                >\n                    Majid Rouhi\n                </Typography.Text>\n                <Divider type='vertical' className='divider'/>\n                <Popover trigger='click'\n                         content={<DonatePopover/>}\n                         placement='topLeft'\n                >\n                    <Button type='link' size='small'>Donate</Button>\n                </Popover>\n            </Col>\n            <Col xs={{span: 9}}\n                 md={{span: 12}}\n                 lg={{span: 16}}\n                 xl={{span: 8}}\n            >\n                <Button type='link'\n                        className='github-logo'\n                        size='small'\n                        target='_blank'\n                        href='https://github.com/mrouhi13/flyyoufools'\n                >\n                    <img width='28'\n                         height='100%'\n                         src={process.env.PUBLIC_URL + `/static/media/gh-mark-dark.svg`}\n                         title='Girhub Repository'\n                         alt='Github Repository'/>\n                </Button>\n            </Col>\n        </Row>\n    </Layout.Footer>\n)\n","import { Layout } from 'antd'\nimport React from 'react'\nimport { useStep } from '../../../hooks'\nimport { Footer, Header, LicenseDetails, Steps } from '../../commons'\nimport './App.scss'\n\nexport const App = () => {\n    const {steps} = useStep()\n\n    return (\n        <Layout className='layout'>\n            <Header/>\n            <Layout.Content className='layout-content'>\n                {steps.appropriateLicense ? <LicenseDetails/> : <Steps/>}\n            </Layout.Content>\n            <Footer/>\n        </Layout>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'antd/dist/antd.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './components/views'\nimport { StepContextProvider } from './contexts'\nimport './index.scss'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <StepContextProvider>\n        <App/>\n    </StepContextProvider>,\n    document.getElementById('root')\n)\n\nserviceWorker.register()\n"],"sourceRoot":""}